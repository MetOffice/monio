---
name: CI

on:
  pull_request:
    branches: [develop]

env:
  REPO: ${{ github.event.repository.name }}
  BUNDLE: pr-${{ github.event.number }}  

jobs:  
  build1:
    if: github.repository_owner == 'MetOffice'
    name: gnu 11.3.1 (UKMO)    
    runs-on: jedi-self-hosted-rg

    steps:
      - name: view secrets context
        shell: bash
        run: echo "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: view vars context
        shell: bash
        run: echo "$VARS_CONTEXT"
        env:
          VARS_CONTEXT: ${{ toJson(vars) }}

      - name: pre-submit cleanup
        run: |
          ls -la ./
          rm -fr ./${{ env.BUNDLE }} || true
          ls -la ./
      - name: checkout current
        uses: actions/checkout@v4
        with:
          path: ./${{ env.BUNDLE }}/${{ env.REPO }}
      - name: initiate bundle
        run: cp ./${{ env.BUNDLE }}/${{ env.REPO }}/ci/* ./${{ env.BUNDLE }}/

      - name: checkout jedicmake
        uses: actions/checkout@v4
        with:
          path: ./${{ env.BUNDLE }}/jedicmake
          repository: JCSDA-internal/jedi-cmake
          submodules: true
          token: ${{ secrets.GH_PAT }}

      - name: checkout oops
        uses: actions/checkout@v4
        with:
          path: ./${{ env.BUNDLE }}/oops
          repository: JCSDA-internal/oops
          token: ${{ secrets.GH_PAT }}
      - name: matching branch checkout attempt oops ${{ github.head_ref }}
        if: github.event_name == 'pull_request'
        run: ./${{ env.BUNDLE }}/get-ref-branch ./${{ env.BUNDLE }}/oops

      - name: build and test
        env: 
          MOBB_DATA: ${{ vars.MOBB_DATA }}  
        run: |
          az acr login --name ngmssboxjediacr
          echo "${{ vars.MOBB_DATA }}"
          (cd ${PWD}/${BUNDLE} && ln -sf ${MOBB_DATA})
          docker run --rm \
            --entrypoint=/usr/local/src/${REPO}/${BUNDLE}/build-and-test \
            --workdir=/usr/local/src/${REPO}/${BUNDLE} \
            --volume ${PWD}/${BUNDLE}:/usr/local/src/${REPO}/${BUNDLE} \
            --volume ${{ runner.tool_cache }}/model-interface-data:/var/tmp/model-interface-data \
            'ngmssboxjediacr.azurecr.io/jedibase:alma9' \
          && cd ${{ github.workspace }} \
          && rm -fr ${{ env.BUNDLE }}

  build2:
    if: '! github.event.pull_request.draft'
    name: gnu 9.4.0 (JCSDA)    
    runs-on: ubuntu-latest

    steps:
      - name: checkout current
        uses: actions/checkout@v4
        with:
          path: ./${{ env.BUNDLE }}/${{ env.REPO }}
      - name: initiate bundle
        run: cp ./${{ env.BUNDLE }}/${{ env.REPO }}/ci/* ./${{ env.BUNDLE }}/

      - name: checkout jedicmake
        uses: actions/checkout@v4
        with:
          path: ./${{ env.BUNDLE }}/jedicmake
          repository: JCSDA-internal/jedi-cmake
          submodules: true
          token: ${{ secrets.GH_PAT }}

      - name: checkout oops
        uses: actions/checkout@v4
        with:
          path: ./${{ env.BUNDLE }}/oops
          repository: JCSDA-internal/oops
          token: ${{ secrets.GH_PAT }}
      - name: matching branch checkout attempt oops ${{ github.head_ref }}
        if: github.event_name == 'pull_request'
        run: ./${{ env.BUNDLE }}/get-ref-branch ./${{ env.BUNDLE }}/oops

      - name: build and lint
        run: |
          docker run --rm \
            --entrypoint=/usr/local/src/${REPO}/${BUNDLE}/build-and-lint \
            --workdir=/usr/local/src/${REPO}/${BUNDLE} \
            --volume ${PWD}/${BUNDLE}:/usr/local/src/${REPO}/${BUNDLE} \
            'jcsda/docker-gnu-openmpi-dev:latest'

  build3:
    if: '! github.event.pull_request.draft'
    name: clang 10.0.0 (JCSDA)    
    runs-on: ubuntu-latest

    steps:
      - name: checkout current
        uses: actions/checkout@v4
        with:
          path: ./${{ env.BUNDLE }}/${{ env.REPO }}
      - name: initiate bundle
        run: cp ./${{ env.BUNDLE }}/${{ env.REPO }}/ci/* ./${{ env.BUNDLE }}/

      - name: checkout jedicmake
        uses: actions/checkout@v4
        with:
          path: ./${{ env.BUNDLE }}/jedicmake
          repository: JCSDA-internal/jedi-cmake
          submodules: true
          token: ${{ secrets.GH_PAT }}

      - name: checkout oops
        uses: actions/checkout@v4
        with:
          path: ./${{ env.BUNDLE }}/oops
          repository: JCSDA-internal/oops
          token: ${{ secrets.GH_PAT }}
      - name: matching branch checkout attempt oops ${{ github.head_ref }}
        if: github.event_name == 'pull_request'
        run: ./${{ env.BUNDLE }}/get-ref-branch ./${{ env.BUNDLE }}/oops

      - name: build and lint
        run: |
          docker run --rm \
            --entrypoint=/usr/local/src/${REPO}/${BUNDLE}/build-and-lint \
            --workdir=/usr/local/src/${REPO}/${BUNDLE} \
            --volume ${PWD}/${BUNDLE}:/usr/local/src/${REPO}/${BUNDLE} \
            'jcsda/docker-clang-mpich-dev:latest'
